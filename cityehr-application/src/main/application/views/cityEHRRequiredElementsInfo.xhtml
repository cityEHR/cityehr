
<!-- 
    *********************************************************************************************************
    cityEHR
    cityEHRRequiredElementsInfo.xhtml
    
    Display the list of required elements for which no value is set.
    Included in every view that has form input for CDA documents.
    
    Copyright (C) 2013-2021 John Chelsom.
    
    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.
    
    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.
    
    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
    **********************************************************************************************************
-->

<!-- xf:group contains the variables needed for display - only active if showRequiredElements='true'
     div is used to hide or show the display -->
<xf:group ref="xxf:instance('control-instance')/current-form[showRequiredElements='true']" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xf="http://www.w3.org/2002/xforms"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
    xmlns:exforms="http://www.exforms.org/exf/1-0"
    xmlns:widget="http://orbeon.org/oxf/xml/widget"
    xmlns:f="http://orbeon.org/oxf/xml/formatting" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:exist="http://exist.sourceforge.net/NS/exist"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cda="urn:hl7-org:v3"
    xmlns:iso-13606="http://www.iso.org/iso-13606"
    xmlns:cityEHR="http://openhealthinformatics.org/ehr">
    
    <!-- These variables are the same as used in check-requiredElements in compositionMainModel -->
    <!-- Check MultipleEntry - visible required elements are not set -->
    <xxf:variable name="unsetMERequiredElementList" select="xxf:instance('form-instance')/descendant::cda:entry/cda:organizer[@classCode='MultipleEntry']/cda:component[2]/descendant::cda:value[@cityEHR:RequiredValue='Required'][@value=''][not(ancestor-or-self::*/@cityEHR:visibility=('false','alwaysHidden'))]"/>
    
    <!-- For simpleEntry and enumeratedClassEntry, the required list has been set by set-requiredElementList -->
    <xxf:variable name="requiredElementLocators" select="tokenize(xxf:instance('control-instance')/current-form/requiredElementList,xxf:instance('view-parameters-instance')/resultSeparator)"/>
    
    <!-- Visible required element list that are set - for simpleEntry and enumeratedClassEntry only -->
    <xxf:variable name="visibleRequiredElementList" select="xxf:instance('form-instance')//cda:entry/cda:observation/descendant::cda:value[@cityEHR:RequiredValue='Required'][@value!=''][not(ancestor-or-self::*/@cityEHR:visibility=('false','alwaysHidden'))] | xxf:instance('form-instance')//cda:entry/cda:organizer[@classCode='EnumeratedClassEntry']/descendant::cda:value[@cityEHR:RequiredValue='Required'][@value!=''][not(ancestor-or-self::*/@cityEHR:visibility=('false','alwaysHidden'))]"/>
    
    <!-- Locators formed from entryIRI and elementIRI, including for clusters -->
    <xxf:variable name="visibleRequiredElementLocators" select="$visibleRequiredElementList/concat(ancestor::cda:entry[1]/descendant::cda:id[1]/@extension,@extension)"/>
    
    <!-- Every element in requiredElementLocators must be visible and set -->
    <xxf:variable name="unsetRequiredElementLocators" select="for $e in $requiredElementLocators return if ($e=$visibleRequiredElementLocators) then () else $e"/>
    
    <!-- Get the full set of required elements, but only if there are unset elements to find -->
    <xxf:variable name="requiredElementList" select="if (empty($unsetRequiredElementLocators)) then () else xxf:instance('form-instance')//cda:entry/cda:observation/descendant::cda:value[@cityEHR:RequiredValue='Required'] | xxf:instance('form-instance')//cda:entry/cda:organizer[@classCode='EnumeratedClassEntry']/descendant::cda:value[@cityEHR:RequiredValue='Required']"/>
    
    <!-- Get an instance for each unset required element (may or may not be visible) -->
    <xxf:variable name="unsetRequiredElements" select="for $e in $unsetRequiredElementLocators return $requiredElementList[concat(ancestor::cda:entry[1]/descendant::cda:id[1]/@extension,@extension) = $e][1]"/>
    
    <xhtml:div
        class="{if (xxf:instance('control-instance')/current-form/showRequiredElements='true' and xs:integer(xxf:instance('control-instance')/current-form/requiredElementStatus) gt 0) then 'requiredElementInfo' else 'hidden'}">
        <xhtml:p class="message">
            <xf:output
                ref="normalize-space(xxf:instance('view-parameters-instance')/staticParameters/cityEHRFolder/requiredElementsInfoLabel)"
            />
        </xhtml:p>
        <!-- Required Element List 
             This list needs to avoid values in the templates (first component) of multiple entriies.
             So consider each type of entry separately: simple entry, enumerated class entry (no longer needed from 2024/02) , multiple entry -->
        <xhtml:ul class="message">
            <xxf:variable name="emptyRequiredElementList"
                select="xxf:instance('form-instance')/descendant::cda:entry/cda:observation/descendant::cda:value[@cityEHR:RequiredValue='Required'][@value=''] | xxf:instance('form-instance')/descendant::cda:entry/cda:organizer[@classCode='EnumeratedClassEntry']/descendant::cda:value[@cityEHR:RequiredValue='Required'][@value=''] | xxf:instance('form-instance')/descendant::cda:entry/cda:organizer[@classCode='MultipleEntry']/cda:component[2]/descendant::cda:value[@cityEHR:RequiredValue='Required'][@value='']"/>
            <xf:repeat nodeset="$emptyRequiredElementList">
                <xxf:variable name="emptyRequiredElement" select="."/>
                <xxf:variable name="entryDisplayName" select="ancestor::cda:entry/descendant::cda:code[@codeSystem='cityEHR'][1]/@displayName"/>
                <xxf:variable name="elementDisplayName" select="@cityEHR:elementDisplayName"/>
                <xxf:variable name="separator"
                    select="if ($entryDisplayName !='' and $elementDisplayName!='') then ' / ' else ' '"/>
                <xhtml:li>
                    <xf:output
                        ref="normalize-space(concat($entryDisplayName,$separator,$elementDisplayName))"
                    />
                </xhtml:li>
            </xf:repeat>
            <xhtml:li class="LayoutFooter">&#160;</xhtml:li>
        </xhtml:ul>
    </xhtml:div>
</xf:group>
