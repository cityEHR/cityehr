<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    *********************************************************************************************************
    cityEHR
    cityEHRCompositionSelection.xhtml
    
    Standard span for composition selection.
    Included in patient views for events, views, forms, letters, etc.
    
    Structure of the selection list is:
    viewNavigationCategory
    viewNavigationItem
        viewNavigationSubItem
        viewNavigationSelectedItem
            contentIndex
    viewNavigationSelectedCategory
       
    Copyright (C) 2013-2021 John Chelsom.
    
    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.
    
    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.
    
    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
    **********************************************************************************************************
-->

<xhtml:span xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xf="http://www.w3.org/2002/xforms" xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:xxf="http://orbeon.org/oxf/xml/xforms" xmlns:exforms="http://www.exforms.org/exf/1-0" xmlns:widget="http://orbeon.org/oxf/xml/widget"
    xmlns:f="http://orbeon.org/oxf/xml/formatting" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:exist="http://exist.sourceforge.net/NS/exist"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xxi="http://orbeon.org/oxf/xml/xinclude" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cda="urn:hl7-org:v3" xmlns:iso-13606="http://www.iso.org/iso-13606"
    xmlns:cityEHR="http://openhealthinformatics.org/ehr">

    <xxf:variable name="compositionTypeIRI" select="xxf:instance('view-parameters-instance')/compositionTypeIRI"/>

    <!-- Folder list only has folders that contain compositions of the correct type (with rank not 0) -->
    <xxf:variable name="folderList"
        select="xxf:instance('dictionary-instance')/iso-13606:folderCollection/iso-13606:folder[exists(iso-13606:composition[@typeId=$compositionTypeIRI][@cityEHR:rank!='0'])]"/>
    <xxf:variable name="currentCareSetting" select="xxf:instance('view-parameters-instance')/careSettingIRI"/>
    <xf:setvalue ref="xxf:instance('view-parameters-instance')/showViewNavigationItemList"
        value="if (xxf:instance('view-parameters-instance')/compositionStatus='none') then . else 'true'"/>
    <xxf:variable name="showViewNavigationItemList" select="xxf:instance('view-parameters-instance')/showViewNavigationItemList"/>

    <!-- Show list of compositions for each folder (care context) -->
    <xf:repeat nodeset="$folderList" id="folder-repeat">
        <xxf:variable name="folder" select="."/>
        <xxf:variable name="folderIRI" select="$folder/@code"/>
        <xxf:variable name="folderDisplayName" select="$folder/@displayName"/>

        <!-- User can only select compositions with cityEHR:rank > 0.
             folderCompositions is sorted by cityEHR:rank and then by displayName -->
        <xxf:variable name="unRankedCompositions"
            select="$folder/iso-13606:composition[@typeId=$compositionTypeIRI][@cityEHR:rank!='0'][$currentCareSetting=$folderIRI]"/>
        <xxf:variable name="folderCompositions" select="xxf:sort($unRankedCompositions,concat(@cityEHR:rank,@displayName),'text','ascending')"/>

        <xxf:variable name="contents" select="count($folderCompositions)"/>

        <!-- This containing span helps Orbeon's repeat to produce HTML that doesn't interfere with our own CSS -->
        <xxf:variable name="viewNavigationCategoryClass" select="if ($contents gt 0) then 'viewNavigationCategory' else 'hidden'"/>
        <!-- Display the folder -->
        <xxf:variable name="selectionActionClass"
            select="if ($folderIRI=$currentCareSetting and xxf:instance('view-parameters-instance')/showViewNavigationItemList='true') then 'collapse' else 'expand'"/>

        <xf:trigger class="{$viewNavigationCategoryClass}" appearance="minimal">
            <xf:label
                ref="concat(xxf:instance('view-parameters-instance')/staticParameters/viewNavigationItem/prefix[@action=$selectionActionClass],$folderDisplayName,' (',$contents,')')"/>
            <!-- Action when folder is selected -->
            <xf:action ev:event="DOMActivate">
                <xxf:variable name="selectedFolder" select="$folderList[index('folder-repeat')]"/>
                <xxf:variable name="selectedFolderIRI" select="$selectedFolder/@code"/>
                <!-- Toggle display of viewNavigationItemList on currently selected viewNavigationItem -->
                <xf:setvalue ref="xxf:instance('view-parameters-instance')/showViewNavigationItemList"
                    value="if ($folderIRI=$currentCareSetting and .='true') then 'false'  else 'true'"/>
                <!-- Set the care setting -->
                <xf:setvalue ref="xxf:instance('view-parameters-instance')/careSettingIRI" value="$selectedFolderIRI"/>
            </xf:action>
        </xf:trigger>

        <!-- Show the compositions for Folder that is the currently selected care context -->
        <xhtmlspan>
            <xf:repeat nodeset="$folderCompositions[$showViewNavigationItemList='true']" id="composition-repeat">
                <!-- Display the form -->
                <xxf:variable name="composition" select="."/>
                <xxf:variable name="compositionDisplayName" select="$composition/@displayName"/>
                <xxf:variable name="viewNavigationItemClass"
                    select="if (xxf:instance('control-instance')/current-form/compositionIRI=$composition/@code) then 'viewNavigationSelectedItem' else 'viewNavigationSubItem'"/>

                <!-- Navigation item for each composition -->
                <xf:trigger class="{$viewNavigationItemClass}" appearance="minimal">
                    <xf:label ref="$compositionDisplayName"/>
                    <!-- Action when composition is selected -->
                    <xf:action ev:event="DOMActivate">
                        <!-- The selected composition -->
                        <xxf:variable name="selectedComposition" select="$folderCompositions[index('composition-repeat')]"/>
                        
                        <!-- The current page is reloaded with the composition set -->
                        <xf:dispatch name="load-new-composition" target="main-model">
                            <xxf:context name="composition" select="$selectedComposition"/>                            
                        </xf:dispatch>
                        
                    </xf:action>
                </xf:trigger>

                <!-- Show the contents for the Form that is currently selected -->
                <xxf:variable name="sectionList"
                    select="if (xxf:instance('control-instance')/current-form/compositionIRI=$composition/@code) then xxf:instance('form-instance')/cda:component/cda:structuredBody/cda:component/cda:section[not(@cityEHR:visibility='alwaysHidden' or @cityEHR:visibility='false' or cda:title='')] else ()"/>
                <xf:repeat id="contents-repeat" nodeset="$sectionList">
                    <xxf:variable name="sectionCount" select="position()"/>
                    <xxf:variable name="sectionTitle" select="./cda:title"/>
                    <xxf:variable name="crossRef" select="concat('''Composition-1-Section-',string($sectionCount),'''')"/>
                    <xhtml:span class="contentIndex" onclick="javascript:scrollToElement({$crossRef})">
                        <xf:output ref="$sectionTitle"/>
                        <!-- <xf:output ref="concat($sectionCount,' ',$sectionTitle)"/> -->
                    </xhtml:span>
                </xf:repeat>
            </xf:repeat>
        </xhtmlspan>
    </xf:repeat>
</xhtml:span>
