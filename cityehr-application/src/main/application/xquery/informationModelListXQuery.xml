<?xml version="1.0" encoding="UTF-8"?>
<!-- 
       *********************************************************************************************************
       cityEHR
       informationModelListXQuery.xml
       
       XQuery to return list of all information models stored for a specialty
       The context of the query is the informationModel collection of the application
       
       Copyright (C) 2013-2021 John Chelsom.
       
       This program is free software; you can redistribute it and/or modify it under the terms of the
       GNU Lesser General Public License as published by the Free Software Foundation; either version
       2.1 of the License, or (at your option) any later version.
       
       This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
       without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
       See the GNU Lesser General Public License for more details.
       
       The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
       **********************************************************************************************************
-->

<exist:query xmlns:exist="http://exist.sourceforge.net/NS/exist" start="1" max="500" xml:space="preserve">
        <exist:text>
        xquery version "1.0"; 
        declare namespace owl="http://www.w3.org/2002/07/owl#";  
        
        for $resource in collection()
        
        let $modelHandle := document-uri($resource)
        let $modelType := if (contains($modelHandle,'CityEHR-Class')) then 'Class' else 'Specialty'
        
        let $applicationIRI := data($resource/owl:Ontology/owl:ClassAssertion[owl:Class/@IRI="#ISO-13606:EHR_Extract"]/owl:NamedIndividual/@IRI)
        
        let $specialtyIRI := data($resource/owl:Ontology/owl:SubClassOf[owl:Class/@IRI="#ISO-13606:Folder"]/owl:Class[1]/@IRI)
        let $specialtyId := substring-after($specialtyIRI,"#ISO-13606:Folder:")
        
        let $specialtyDisplayNameIRI := data($resource/owl:Ontology/owl:ObjectPropertyAssertion[owl:ObjectProperty/@IRI="#hasDisplayName"][owl:NamedIndividual/@IRI=$specialtyIRI]/owl:NamedIndividual[2]/@IRI)
        let $specialtyDisplayName := data($resource/owl:Ontology/owl:DataPropertyAssertion[owl:DataProperty/@IRI="#hasValue"][owl:NamedIndividual/@IRI=$specialtyDisplayNameIRI]/owl:Literal)
        
        let $classIRI := data($resource/owl:Ontology/owl:SubClassOf[owl:Class/@IRI="#CityEHR:Class"]/owl:Class[1]/@IRI)
        
        let $modelIRI := if ($modelType='Class') then $classIRI else $specialtyIRI
        
        let $modelDisplayNameIRI := data($resource/owl:Ontology/owl:ObjectPropertyAssertion[owl:ObjectProperty/@IRI="#hasDisplayName"][owl:NamedIndividual/@IRI=$modelIRI]/owl:NamedIndividual[2]/@IRI)
        let $modelDisplayName := data($resource/owl:Ontology/owl:DataPropertyAssertion[owl:DataProperty/@IRI="#hasValue"][owl:NamedIndividual/@IRI=$modelDisplayNameIRI]/owl:Literal)

        let $importedFromFile := data($resource/owl:Ontology/owl:Annotation[owl:AnnotationProperty/@abbreviatedIRI='rdfs:importedFromFile']/owl:Literal)
(:       
        order by $specialtyDisplayName, $modelType descending
 :)       
        return
        &lt;informationModel> 
        &lt;specialtyIRI>{$specialtyIRI}&lt;/specialtyIRI>
        &lt;specialtyDisplayName>{if ($specialtyDisplayName!='') then $specialtyDisplayName else $specialtyId}&lt;/specialtyDisplayName>
        &lt;modelIRI>{$modelIRI}&lt;/modelIRI>
        &lt;informationModelType>{$modelType}&lt;/informationModelType>
        &lt;modelDisplayName iri="{$modelDisplayNameIRI}">{$modelDisplayName}&lt;/modelDisplayName>
        &lt;importedFromFile>{$importedFromFile}&lt;/importedFromFile>
        &lt;handle>{$modelHandle}&lt;/handle>
        &lt;/informationModel>
        </exist:text>
</exist:query>
