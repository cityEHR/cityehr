<?xml version="1.0" encoding="UTF-8"?>
<!-- 
        *********************************************************************************************************
        cityEHR
        patientEventsXQuery.xml
        
        XQuery to return set of compositions (events) stored in the record of the specified patient
        
        This is an XML document which is read by the cityEHR 
        
        Returns a set of <event> elements of the form:
        <event>
           <handle/>
           <compositionHandle/>
           <compositionTypeIRI/>
           <compositionIRI/>
           <documentationOf/>
           <effectiveTime/>
           <displayName/>
           <author/>
           <authorTime/>
        </event>
        
        Copyright (C) 2013-2021 John Chelsom.
        
        This program is free software; you can redistribute it and/or modify it under the terms of the
        GNU Lesser General Public License as published by the Free Software Foundation; either version
        2.1 of the License, or (at your option) any later version.
        
        This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
        without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
        See the GNU Lesser General Public License for more details.
        
        The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
        **********************************************************************************************************
-->
<exist:query xmlns:exist="http://exist.sourceforge.net/NS/exist" start="1" max="500" xml:space="preserve">
        <exist:text>
        xquery version "1.0"; 
        declare namespace cda="urn:hl7-org:v3"; 
        for $resource in collection()
        let $eventHandle := document-uri($resource)
        let $eventDisplayName := data($resource//cda:ClinicalDocument/cda:code[@codeSystem='cityEHR']/@displayName[1])
        let $compositionTypeIRI := data($resource//cda:ClinicalDocument/cda:typeId/@root[1])
        let $compositionIRI := data($resource//cda:ClinicalDocument/cda:typeId/@extension[1])
        let $compositionHandle := data($resource//cda:ClinicalDocument/cda:id/@extension[1])
        
        let $author := data($resource//cda:ClinicalDocument/cda:author[1]/cda:assignedAuthor/cda:assignedPerson/cda:name[1])
        let $authorTime := data($resource//cda:ClinicalDocument/cda:author[1]/cda:time/@value)
        
        let $documentationOf := data($resource//cda:ClinicalDocument/cda:documentationOf[1]/cda:serviceEvent/cda:id/@root)
        
        let $effectiveTime := data($resource//cda:ClinicalDocument/cda:effectiveTime/@value[1])

        order by $effectiveTime descending
        return
        &lt;event> 
        &lt;handle>{$eventHandle}&lt;/handle>
        &lt;compositionHandle>{$compositionHandle}&lt;/compositionHandle>
        &lt;compositionTypeIRI>{$compositionTypeIRI}&lt;/compositionTypeIRI>
        &lt;compositionIRI>{$compositionIRI}&lt;/compositionIRI>
        &lt;documentationOf>{$documentationOf}&lt;/documentationOf>
        &lt;effectiveTime>{$effectiveTime}&lt;/effectiveTime>
        &lt;displayName>{$eventDisplayName}&lt;/displayName>
        &lt;author>{$author}&lt;/author>
        &lt;authorTime>{$authorTime}&lt;/authorTime>
        &lt;/event>
        </exist:text>
</exist:query>

